(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     48703,        937]
NotebookOptionsPosition[     48053,        911]
NotebookOutlinePosition[     48410,        927]
CellTagsIndexPosition[     48367,        924]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Exp12", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"temperature", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"50", ",", "110", ",", "5"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resistance", "=", 
     RowBox[{"{", 
      RowBox[{
      "338", ",", "308", ",", "262", ",", "226", ",", "195", ",", "168", ",", 
       "148", ",", "128", ",", "110", ",", "97", ",", "85", ",", "76", ",", 
       "66"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coordinatesExp", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"temperature", ",", "resistance"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"linearFitExp", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"coordinatesExp", ",", "x", ",", "x"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PlotGraph", "=", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{"coordinatesExp", ",", "\[IndentingNewLine]", 
      RowBox[{"PlotMarkers", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "18"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLinesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Dashed"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<T/\[Degree]C\>\"", ",", "\"\<R/k\[CapitalOmega]\>\""}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<NTC\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
         RowBox[{"FontSize", "\[Rule]", "18"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"fullForm", "=", 
    RowBox[{"{", 
     RowBox[{"temperature", ",", "resistance"}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\</Users/timfeirg/Documents/Medical-Sensor-Experiments/Exp12_NTC.xlsx\>\
\"", ",", "fullForm", ",", "\"\<XLSX\>\""}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6111964096068068`*^9, 3.611196409879601*^9}, {
  3.611196476186781*^9, 3.611196519046813*^9}, {3.6111965809958563`*^9, 
  3.611196582022146*^9}, {3.611196618712243*^9, 3.611196619858032*^9}, {
  3.611196661826483*^9, 3.6111966869986258`*^9}, {3.611196862813945*^9, 
  3.611196877454761*^9}, {3.611196925051537*^9, 3.611196954215979*^9}, {
  3.611196992513674*^9, 3.6111969929195538`*^9}, {3.611198358464508*^9, 
  3.611198383448636*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{50., 338.}, {55., 308.}, {60., 262.}, {65., 226.}, {
    70., 195.}, {75., 168.}, {80., 148.}, {85., 128.}, {90., 110.}, {95., 
    97.}, {100., 85.}, {105., 76.}, {110., 66.}}, {{{}, {}, 
      {GrayLevel[0], Thickness[Large], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}]}}, {
      {GrayLevel[0], Thickness[Large], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 1], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 2], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 3], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 4], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 5], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 6], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 7], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 8], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 9], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 10], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 11], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 12], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{50., 66.},
  BaseStyle->{FontWeight -> "Bold", FontSize -> 18},
  Frame->Automatic,
  FrameLabel->{
    FormBox["\"T/\[Degree]C\"", TraditionalForm], 
    FormBox["\"R/k\[CapitalOmega]\"", TraditionalForm]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0], 
    Dashing[{Small, Small}]],
  ImageSize->{Automatic, 1152.8518961072728`},
  Method->{},
  PlotLabel->FormBox["\"NTC\"", TraditionalForm],
  PlotRange->{{50., 110.}, {66., 338.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{1.2, 1.2}, {5.44, 5.44}}]], "Output",
 CellChangeTimes->{
  3.611196878062582*^9, {3.611196928091674*^9, 3.6111969547228127`*^9}, 
   3.611197174250675*^9, {3.611198371256957*^9, 3.611198384802196*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "50", ",", "55", ",", "60", ",", "65", ",", "70", ",", "75", ",", "80", 
     ",", "85", ",", "90", ",", "95", ",", "100", ",", "105", ",", "110"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "338", ",", "308", ",", "262", ",", "226", ",", "195", ",", "168", ",", 
     "148", ",", "128", ",", "110", ",", "97", ",", "85", ",", "76", ",", 
     "66"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.611196878062582*^9, {3.611196928091674*^9, 3.6111969547228127`*^9}, 
   3.611197174250675*^9, {3.611198371256957*^9, 3.611198384810213*^9}}],

Cell[BoxData["\<\"/Users/timfeirg/Documents/Medical-Sensor-Experiments/Exp12_\
NTC.xlsx\"\>"], "Output",
 CellChangeTimes->{
  3.611196878062582*^9, {3.611196928091674*^9, 3.6111969547228127`*^9}, 
   3.611197174250675*^9, {3.611198371256957*^9, 3.611198384853532*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temperature", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"50", ",", "110", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resistance", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.45", ",", "1.50", ",", "1.79", ",", "2.10", ",", "2.57", ",", "3.41", 
     ",", "4.75", ",", "7.59", ",", "14.06", ",", "27.00", ",", "55.90", ",", 
     "180.1", ",", "727"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coordinatesExp", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"temperature", ",", "resistance"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearFitExp", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"coordinatesExp", ",", "x", ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotGraph", "=", 
  RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
   RowBox[{"coordinatesExp", ",", "\[IndentingNewLine]", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "18"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLinesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Dashed"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<T/\[Degree]C\>\"", ",", "\"\<R/k\[CapitalOmega]\>\""}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<PTC\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "18"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fullForm", "=", 
  RowBox[{"{", 
   RowBox[{"temperature", ",", "resistance"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/timfeirg/Documents/Medical-Sensor-Experiments/Exp12_PTC.xlsx\>\"\
", ",", "fullForm", ",", "\"\<XLSX\>\""}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.611197038165078*^9, 3.611197089221332*^9}, {
  3.611198396535987*^9, 3.6111984112316113`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{50., 1.45}, {55., 1.5}, {60., 1.79}, {65., 2.1}, {70.,
     2.57}, {75., 3.41}, {80., 4.75}, {85., 7.59}, {90., 14.06}, {95., 27.}, {
    100., 55.9}, {110., 137.065}, {103.26751207729468`, 137.065}}, {{{}, {}, 
      {GrayLevel[0], Thickness[Large], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13}]}}, {
      {GrayLevel[0], Thickness[Large], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 1], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 2], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 3], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 4], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 5], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 6], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 7], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 8], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 9], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 10], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 11], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->18], 13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{50., 0},
  BaseStyle->{FontWeight -> "Bold", FontSize -> 18},
  Frame->Automatic,
  FrameLabel->{
    FormBox["\"T/\[Degree]C\"", TraditionalForm], 
    FormBox["\"R/k\[CapitalOmega]\"", TraditionalForm]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0], 
    Dashing[{Small, Small}]],
  ImageSize->{Automatic, 1154.368688904212},
  Method->{},
  PlotLabel->FormBox["\"PTC\"", TraditionalForm],
  PlotRange->{{50., 110.}, {0, 137.065}},
  PlotRangeClipping->True,
  PlotRangePadding->{{1.2, 1.2}, {2.7413, 2.7413}}]], "Output",
 CellChangeTimes->{{3.611197079545636*^9, 3.6111970908592367`*^9}, 
   3.61119841469387*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
rSSl7777Tnz//ffihx9+oJ9EIiEp/fjjjzLLTz/9JH7++Wf6SSaTg8T//d//
ySy//PKL+PXXX+nnt99+g8cCmeX333+XWf71r3+Jf//73/STTqcHif/85z+y
zf/44w/x559/4sezhuqHdLRd5w2+7wyz5VgOD5UaIQWZZLaBScz0JWYIw+Uf
z3GqmL/85S9i0KBBYvDgwfRTU1Mj61hbWyvrWFdXJ4YMGUI/Q4cOHSSGDRsm
swwfPlyMGDGCfkaOHClGjRolsyyxxBIyy5JLLimWWmop+hk9evQgsfTSS8vo
ZZZZRiy77LL0s9xyyw0SY8aMkYBGD6/RW0bj0E3FyhMmis0220z89a9/FVtv
vbXw+Xxixx13FLvuuquYNm2a+Nvf/ib2228/MX36dHHIIYeII444Qhx99NHi
uOOOEyeddJI49dRTxZlnnin8fr+YOXOmuPjii8Vll10mAoGAuPbaa0UwGBQ3
3XSTuPXWW8Wdd94p7rnnHtHW1iYefvhh8eijj4qOjg7xzDPPiH/84x+iq6uL
RglGBNgf7A7eBiNLtgWPgiPpirhkNeIr8BAYBgwiuWAPi4KkYOcGLXYueyYw
jnaP/Dppq6lim222oR/ZnrKnttpqK9klW265pZgyZQr9yLYeJLbYYguZZfLk
yWLzzTenH3TDpptuKrNMmjRJZtlkk03ExhtvTD8bbbTRIDFx4kQZ7fV6xYYb
bkg/G2ywwSCx/vrrS0rrrbeeWHfddcU666xDPxMmTJCU1l57bZllrbXWEmuu
uSb9rLHGGoPE6quvLrOsttpqYvz48fQzbtw4seqqq8osq6yyisyy8sori7Fj
x9LPSiutNEisuOKKMnqFFVYQyy+/PP1IphoE9pKUwGhgOsl+9CN5UVKSXKl4
VHIr/UjeHQQmllnAzmBt/EhGB8fLLJL31UiQY4J+5Aih4SLbHAMHA0j+eI6k
Nt+W/o1kICGpo2RgAlzUhOqI6qNp0GJoTCfw+3PPPdcX/M4nwvmTz2Dd8QdS
XES/C6o9V5pwOv1ejDs9+siK5I4spFOmZTKF5gGmluQ+5L+cCehHTguSgeQE
oaYLOXHQj5xGBmE+kVnQcJhl8CPnHEw+MotsUjUpyemJfuRkNQitLUUH5jDM
ZfiBFoB+WLToUzFrF83kDTJ0n8seo6lazuKY4cWLL75I/fv3v/+d+vuxxx4T
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\
\>"]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "50", ",", "55", ",", "60", ",", "65", ",", "70", ",", "75", ",", "80", 
     ",", "85", ",", "90", ",", "95", ",", "100", ",", "105", ",", "110"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.45`", ",", "1.5`", ",", "1.79`", ",", "2.1`", ",", "2.57`", ",", 
     "3.41`", ",", "4.75`", ",", "7.59`", ",", "14.06`", ",", "27.`", ",", 
     "55.9`", ",", "180.1`", ",", "727"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.611197079545636*^9, 3.6111970908592367`*^9}, 
   3.611198414702647*^9}],

Cell[BoxData["\<\"/Users/timfeirg/Documents/Medical-Sensor-Experiments/Exp12_\
PTC.xlsx\"\>"], "Output",
 CellChangeTimes->{{3.611197079545636*^9, 3.6111970908592367`*^9}, 
   3.611198414703556*^9}]
}, Open  ]]
},
WindowSize->{1649, 867},
WindowMargins->{{Automatic, 7}, {Automatic, 44}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 3055, 70, 352, "Input"],
Cell[3637, 94, 2666, 67, 1168, "Output"],
Cell[6306, 163, 627, 15, 28, "Output"],
Cell[6936, 180, 269, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7242, 189, 2503, 59, 318, "Input"],
Cell[9748, 250, 37502, 637, 1169, 2408, 61, "CachedBoxData", "BoxData", \
"Output"],
Cell[47253, 889, 583, 14, 28, "Output"],
Cell[47839, 905, 198, 3, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
